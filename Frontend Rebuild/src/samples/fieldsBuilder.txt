// This is basically a reference if I ever need to go back to it

function oldFieldBuilder(field, sortedPlayers, size) {
  switch(field.type) {
    case 'Name': {
      return sortedPlayers.map((e, index) => {
        return `${parseInt(index)+1}: ${e.displayName.replace(/\*|\^|\~|\_|\`/g, function(x) { return "\\" + x })}`;
      }).slice(0, size);
    }
    case 'Leaderboard': {
      return sortedPlayers.map((e, index) => {
        return `${ MiscHandler.AddCommas( Math.floor(byString(e, field.data))) }`;
      }).slice(0, size);
    }
    case 'SplitLeaderboard': { 
      return sortedPlayers.map((e, index) => {
        return `${ MiscHandler.AddCommas( Math.floor(byString(e, field.data[0]))) } - ${ MiscHandler.AddCommas(Math.floor(byString(e, field.data[1]))) }`;
      }).slice(0, size);
    }
    case 'PowerLeaderboard': {
      return sortedPlayers.map((e, index) => {
        return `${ MiscHandler.AddCommas( Math.floor(byString(e, field.data[0]) + byString(e, field.data[1]))) } (${ MiscHandler.AddCommas(byString(e, field.data[0])) } + ${ MiscHandler.AddCommas(byString(e, field.data[1])) })`;
      }).slice(0, size);
    }
    case 'TimeLeaderboard': {
      return sortedPlayers.map((e, index) => {
        return `${ MiscHandler.AddCommas( Math.floor(byString(e, field.data)/60)) } Hrs`;
      }).slice(0, size);
    }
    case 'SplitTotal': {
      return sortedPlayers.map((e, index) => {
        return `${ MiscHandler.AddCommas( Math.floor(byString(e, field.data[0]) + byString(e, field.data[1]))) }`;
      }).slice(0, size);
    }
    case 'Reset': {
      return sortedPlayers.map((e, index) => {
        return `${ MiscHandler.AddCommas((byString(e, field.data))) }`;
      }).slice(0, size);
    }
  }
}